'use client'
import React, { useState, useEffect } from 'react'
import { observer } from 'mobx-react-lite'

import { useQueryState } from 'next-usequerystate'

import { cn } from '@hanzo/ui/util'

import { ProductCard, Cart, FacetsWidget } from '@hanzo/cart/components'
import { useCommerce } from '@hanzo/cart/service'
import type { FacetsSelection } from '@hanzo/cart/types'


import siteDef from '@/siteDef'
import CartDrawer from '@/components/cart-drawer'

const Store: React.FC<{
  searchParams?: { [key: string]: string | string[] | undefined }
  className?: string
  agent?: string
}> = observer(({
  className='',
  agent,
  searchParams={ ignore: undefined }
}) => {
  const c = useCommerce() 

  const mobile = (agent === 'phone')

  const [loading, setLoading] = useState<boolean>(true)
  const [level1, setLevel1] = useQueryState('level1') // level 1 facet value (AG / AU)
  const [level2, setLevel2] = useQueryState('level2') // level 2 facet value (B / C / MB / GD)

  useEffect(() => {
    const facets: FacetsSelection = { }
    if (level1) {
      facets[1] = [level1]
    }
    if (level2) {
      facets[2] = [level2]
    }
    const categories = c.setFacetsSelection(facets)

    if (categories.length > 1) {
      throw new Error (
        "MarketCategoryView: More than one specified Category should never be possible with this UI!"
      )
    }
    setLoading(false)
  }, [level1 , level2])



  const cartColumnClx = 'min-w-[300px] md:min-w-[320px] lg:min-w-[320px] lg:max-w-[360px] xl:min-w-[360px]'

  const widgetClx = 'sticky z-30 bg-background top-[44px] md:top-[80px] mb-6 ' +
    'flex flex-row justify-between md:justify-start sm:gap-x-6 items-start pl-3 lg:pr-8 md:pr-14 py-3 ' + 
    'w-[100vw] sm:w-full left-0 right-0 h-auto ' 

  const facets1Clx = 'grid grid-cols-2 sm:gap-x-4 md:border-r ' + (mobile ? '' : 'pr-6 ')
  const facets2Clx = 'grid grid-cols-4 sm:gap-x-4 '

  return (
    <div className='flex flex-col justify-start items-start'>
      <FacetsWidget
        exclusive={false}
        className={widgetClx} 
        isMobile={mobile}
        facetClassNames={[facets1Clx, facets2Clx]}
        facets={siteDef.ext.commerce.facets}
      >
        <CartDrawer className='md:hidden right-0 pr-3 text-primary relative' >
          <Cart isMobile={mobile} className='p-0 border-none mt-12'/>
        </CartDrawer>
      </FacetsWidget>
      <div className={cn('flex flex-row justify-between gap-6 items-stretch w-[100vw] sm:w-auto overflow-y-scroll sm:overflow-y-hidden', className)}>
        <div className='flex flex-row px-4 sm:px-0 sm:grid sm:grid-cols-3 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:grow'>
          {c.specifiedItems.map((item) => (<ProductCard item={item} key={item.product.sku} className='rounded-lg w-[40vw] sm:w-auto'/>))}
        </div> 
        <div className={'shrink hidden md:block ' + cartColumnClx}>
          <div className={'fixed z-50 md:top-[94px] lg:top-auto ' + cartColumnClx}>
            <Cart className=''/>
          </div>
        </div>   
      </div>
    </div>
  )
}) 

export default Store
